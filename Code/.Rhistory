data[,1] <- as.Date( as.character( data[,1] ) , '%Y-%m-%d' )
16*sd(subset(data$logreturn, data$Date < as.Date("2007-12-31")))
16*sd(subset(data$logreturn, data$Date <= as.Date("2007-12-31")))
data <- read.csv("~/Scrivania/BGSE/Winter_term/Financial_Econometrics/UNG.csv", header = TRUE, sep = ",")
#invert the data
data <- data[seq(nrow(data), 1, -1), ]
data$logprice <- log(data$Adj.Close)
data$logreturns <- diff( data$logprice )*100
for(i in 1:(nrow(data)-1)){
data$logreturn[i] <- 100*(data$logprice[i] - data$logprice[i-1])
}
View(data)
View(data)
data[1,]
16*sd(subset(data$logreturn, as.Date("2009-01-01") < data$Date < as.Data("2009-12-31")))
1.96 * (1/sqrt(4024))
0.2 / 0.03090
kurtosis(rnorm(1000))
library(fBasics)
kurtosis(rnorm(1000))
train <- read.csv("news_popularity_training.csv", sep = ",")
setwd("~/Scrivania/BGSE/Winter_term/Kaggle_Competition/Code")
train <- read.csv("news_popularity_training.csv", sep = ",")
train <- read.csv("..\DATA\news_popularity_training.csv", sep = ",")
train <- read.csv("../DATA/news_popularity_training.csv", sep = ",")
table(train$popularity)
View(train)
round(prop.table(table(train$popularity)) * 100, digits = 1)
View(train)
create.target <- function(data, outcome){
for(i in 1:nrow(data)){
if(data$popularity == outcome)
data$target_{outcome} <- 1
else
data$target_{outcome} <- 0
}
}
create.target <- function(data, outcome){
for(i in 1:nrow(data)){
if(data$popularity == outcome)
data$target{outcome} <- 1
else
data$target{outcome} <- 0
}
}
create.target <- function(data, outcome){
for(i in 1:nrow(data)){
if(data$popularity == outcome)
data$target{outcome} <- 1
else
data$target{outcome} <- 0
}
}
create.target <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==1)
data$target1 <- 1
else
data$target1 <- 0
}
}
create.target1 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==1)
data$target1 <- 1
else
data$target1 <- 0
}
}
create.target2 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==2)
data$target2 <- 1
else
data$target2 <- 0
}
}
create.target1 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==1)
data$target1 <- 1
else
data$target1 <- 0
}
}
create.target2 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==2)
data$target2 <- 1
else
data$target2 <- 0
}
}
create.target3 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==3)
data$target3 <- 1
else
data$target3 <- 0
}
}
create.target4 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==4)
data$target4 <- 1
else
data$target4 <- 0
}
}
create.target5 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==5)
data$target5 <- 1
else
data$target5 <- 0
}
}
create.target1(train)
create.target2(train)
create.target1 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==1)
data$target1 <- 1
else
data$target1 <- 0
}
}
create.target2 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==2)
data$target2 <- 1
else
data$target2 <- 0
}
}
create.target3 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==3)
data$target3 <- 1
else
data$target3 <- 0
}
}
create.target4 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==4)
data$target4 <- 1
else
data$target4 <- 0
}
}
create.target5 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==5)
data$target5 <- 1
else
data$target5 <- 0
}
}
train
train$target1
train$target1
train$target1
train <- read.csv("../DATA/news_popularity_training.csv", sep = ",")
View(train)
#tables
table(train$popularity)
round(prop.table(table(train$popularity)) * 100, digits = 1)
#normalize
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
train_norm <- as.data.frame(lapply(train[4:61], normalize))
train_norm <- cbind(train[1:3],train_norm,train$popularity)
#Sample
ind <- sample(2, nrow(train), replace=TRUE, prob=c(0.67, 0.33))
train.training <- train[ind==1, 1:61]
train.test <- train[ind==2, 1:61]
train.trainLabels <- train[ind==1, 62]
train.testLabels <- train[ind==2, 62]
#kkn
train_pred <- knn(train = train.training, test = train.test, cl = train.trainLabels, k=3)
#linear
create.target1 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==1)
data$target1 <- 1
else
data$target1 <- 0
}
}
create.target2 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==2)
data$target2 <- 1
else
data$target2 <- 0
}
}
create.target3 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==3)
data$target3 <- 1
else
data$target3 <- 0
}
}
create.target4 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==4)
data$target4 <- 1
else
data$target4 <- 0
}
}
create.target5 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity ==5)
data$target5 <- 1
else
data$target5 <- 0
}
}
train$target1
create.target1(train)
create.target2(train)
create.target3(train)
create.target4(train)
create.target5(train)
View(train)
for(i in 1:nrow(train)){
if(train$popularity == 1)
train$target1 <- 1
else
train$target1 <- 0
}
warnings()
create.target1 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==1)
data$target1[i] <- 1
else
data$target1[i] <- 0
}
}
create.target2 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==2)
data$target2[i] <- 1
else
data$target2[i] <- 0
}
}
create.target3 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==3)
data$target3[i] <- 1
else
data$target3[i] <- 0
}
}
create.target4 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==4)
data$target4[i] <- 1
else
data$target4[i] <- 0
}
}
create.target5 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==5)
data$target5[i] <- 1
else
data$target5[i] <- 0
}
}
train <- read.csv("../DATA/news_popularity_training.csv", sep = ",")
#normalize
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
train_norm <- as.data.frame(lapply(train[4:61], normalize))
train_norm <- cbind(train[1:3],train_norm,train$popularity)
create.target1 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==1)
data$target1[i] <- 1
else
data$target1[i] <- 0
}
}
create.target2 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==2)
data$target2[i] <- 1
else
data$target2[i] <- 0
}
}
create.target3 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==3)
data$target3[i] <- 1
else
data$target3[i] <- 0
}
}
create.target4 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==4)
data$target4[i] <- 1
else
data$target4[i] <- 0
}
}
create.target5 <- function(data){
for(i in 1:nrow(data)){
if(data$popularity[i] ==5)
data$target5[i] <- 1
else
data$target5[i] <- 0
}
}
create.target1(train)
create.target2(train)
create.target3(train)
create.target4(train)
create.target5(train)
View(train)
View(train)
for(i in 1:nrow(train)){
if(train$popularity[i] == 1)
train$target1[i] <- 1
else
train$target1[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 1)
train$target5[i] <- 1
else
train$target5[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 1)
train$target1[i] <- 1
else
train$target1[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 2)
train$target2[i] <- 1
else
train$target2[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 3)
train$target3[i] <- 1
else
train$target3[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 4)
train$target4[i] <- 1
else
train$target4[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 5)
train$target5[i] <- 1
else
train$target5[i] <- 0
}
View(train)
datafit1 <- lm(target1 ~ num_hrefs + title_sentiment_polarity + global_rate_negative_words+1, data=train)
weights1 <- coef(datafit1)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias1 <- coef(datafit1)[1]
datafit2 <- lm(target2 ~ num_hrefs + title_sentiment_polarity + global_rate_negative_words +1, data=train)
weights2 <- coef(datafit2)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias2 <- coef(datafit2)[1]
datafit3 <- lm(target3 ~  num_hrefs + title_sentiment_polarity + global_rate_negative_words +1, data=train)
weights3 <- coef(datafit3)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias3 <- coef(datafit3)[1]
datafit4 <- lm(target4 ~  num_hrefs + title_sentiment_polarity + global_rate_negative_words +1, data=train)
weights4 <- coef(datafit4)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias4 <- coef(datafit4)[1]
datafit5 <- lm(target5 ~  num_hrefs + title_sentiment_polarity + global_rate_negative_words +1, data=train)
weights5 <- coef(datafit5)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias5 <- coef(datafit5)[1]
test <- read.csv("../DATA/news_popularity_test.csv")
fitted.values1 <- bias1 + weights1[1] * test$num_hrefs + weights1[2] * test$title_sentiment_polarity + weights1[3] * test$global_rate_negative_words
fitted.values1 <- bias1 + weights1[1] * test$num_hrefs + weights1[2] * test$title_sentiment_polarity + weights1[3] * test$global_rate_negative_words
fitted.values1
fitted.values1[which fitted.values1 > 0.5]
fitted.values1[which > 0.5]
length(which(fitted.values1 > 0.5))
fitted.values2 <- bias2 + weights2[1] * test$num_hrefs + weights2[2] * test$title_sentiment_polarity + weights2[3] * test$global_rate_negative_words
length(which(fitted.values2 > 0.5))
fitted.values3 <- bias3 +  weights2[1] * test$num_hrefs + weights2[2] * test$title_sentiment_polarity + weights2[3] * test$global_rate_negative_words
length(which(fitted.values3 > 0.5))
round(prop.table(table(train$popularity)) * 100, digits = 1)
fitted.values3 <- bias3 +  weights3[1] * test$num_hrefs + weights3[2] * test$title_sentiment_polarity + weights3[3] * test$global_rate_negative_words
length(which(fitted.values3 > 0.5))
fitted.values4 <- bias4 +  weights4[1] * test$num_hrefs + weights4[2] * test$title_sentiment_polarity + weights4[3] * test$global_rate_negative_words
length(which(fitted.values4 > 0.5))
fitted.values5 <- bias5 +  weights5[1] * test$num_hrefs + weights5[2] * test$title_sentiment_polarity + weights5[3] * test$global_rate_negative_words
length(which(fitted.values5 > 0.5))
max <- rep(0,nrow(test))
?max
max <- max(fitted.values5, fitted.values4, fitted.values3, fitted.values2, fitted.values1)
max
max[i] <- max(fitted.values5[i], fitted.values4[i], fitted.values3[i], fitted.values2[i], fitted.values1[i])
for(i in 1:nrow(test))
max[i] <- max(fitted.values5[i], fitted.values4[i], fitted.values3[i], fitted.values2[i], fitted.values1[i])
for(i in 1:nrow(test))
max[i] <- max(fitted.values5[i], fitted.values4[i], fitted.values3[i], fitted.values2[i], fitted.values1[i])
nrow(test)
length(fitted.values2)
fitted.values[1]
fitted.values1[1]
or(i in 1:nrow(test))
max[i] <- max(fitted.values5[i], fitted.values4[i], fitted.values3[i], fitted.values2[i], fitted.values1[i])
for(i in 1:nrow(test))
max[i] <- max(fitted.values5[i], fitted.values4[i], fitted.values3[i], fitted.values2[i], fitted.values1[i])
for(i in 1:nrow(test))
max[i] <- max(fitted.values5[i], fitted.values4[i], fitted.values3[i], fitted.values2[i], fitted.values1[i])
for(i in 1:nrow(test))
max[i] <- max(fitted.values5[i], fitted.values4[i], fitted.values3[i], fitted.values2[i], fitted.values1[i])
train <- read.csv("../DATA/news_popularity_training.csv", sep = ",")
test <- read.csv("../DATA/news_popularity_test.csv")
#tables
table(train$popularity)
round(prop.table(table(train$popularity)) * 100, digits = 1)
#normalize
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
train_norm <- as.data.frame(lapply(train[4:61], normalize))
train_norm <- cbind(train[1:3],train_norm,train$popularity)
#Sample
ind <- sample(2, nrow(train), replace=TRUE, prob=c(0.67, 0.33))
train.training <- train[ind==1, 1:61]
train.test <- train[ind==2, 1:61]
train.trainLabels <- train[ind==1, 62]
train.testLabels <- train[ind==2, 62]
#kkn
train_pred <- knn(train = train.training, test = train.test, cl = train.trainLabels, k=3)
for(i in 1:nrow(train)){
if(train$popularity[i] == 1)
train$target1[i] <- 1
else
train$target1[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 2)
train$target2[i] <- 1
else
train$target2[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 3)
train$target3[i] <- 1
else
train$target3[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 4)
train$target4[i] <- 1
else
train$target4[i] <- 0
}
for(i in 1:nrow(train)){
if(train$popularity[i] == 5)
train$target5[i] <- 1
else
train$target5[i] <- 0
}
datafit1 <- lm(target1 ~ num_hrefs + title_sentiment_polarity + global_rate_negative_words+1, data=train)
weights1 <- coef(datafit1)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias1 <- coef(datafit1)[1]
datafit2 <- lm(target2 ~ num_hrefs + title_sentiment_polarity + global_rate_negative_words +1, data=train)
weights2 <- coef(datafit2)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias2 <- coef(datafit2)[1]
datafit3 <- lm(target3 ~  num_hrefs + title_sentiment_polarity + global_rate_negative_words +1, data=train)
weights3 <- coef(datafit3)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias3 <- coef(datafit3)[1]
datafit4 <- lm(target4 ~  num_hrefs + title_sentiment_polarity + global_rate_negative_words +1, data=train)
weights4 <- coef(datafit4)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias4 <- coef(datafit4)[1]
datafit5 <- lm(target5 ~  num_hrefs + title_sentiment_polarity + global_rate_negative_words +1, data=train)
weights5 <- coef(datafit5)[c("num_hrefs","title_sentiment_polarity", "global_rate_negative_words")]
bias5 <- coef(datafit5)[1]
fitted.values1 <- bias1 + weights1[1] * test$num_hrefs + weights1[2] * test$title_sentiment_polarity + weights1[3] * test$global_rate_negative_words
length(which(fitted.values1 > 0.5))
fitted.values2 <- bias2 + weights2[1] * test$num_hrefs + weights2[2] * test$title_sentiment_polarity + weights2[3] * test$global_rate_negative_words
length(which(fitted.values2 > 0.5))
fitted.values3 <- bias3 +  weights3[1] * test$num_hrefs + weights3[2] * test$title_sentiment_polarity + weights3[3] * test$global_rate_negative_words
length(which(fitted.values3 > 0.5))
fitted.values4 <- bias4 +  weights4[1] * test$num_hrefs + weights4[2] * test$title_sentiment_polarity + weights4[3] * test$global_rate_negative_words
length(which(fitted.values4 > 0.5))
fitted.values5 <- bias5 +  weights5[1] * test$num_hrefs + weights5[2] * test$title_sentiment_polarity + weights5[3] * test$global_rate_negative_words
length(which(fitted.values5 > 0.5))
for(i in 1:nrow(test))
max[i] <- max(fitted.values5[i], fitted.values4[i], fitted.values3[i], fitted.values2[i], fitted.values1[i])
for(i in 1:nrow(test))
max[i] <- max(fitted.values5[i], fitted.values4[i], fitted.values3[i], fitted.values2[i], fitted.values1[i])
